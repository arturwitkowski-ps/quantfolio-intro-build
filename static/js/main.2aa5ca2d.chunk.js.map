{"version":3,"sources":["images/logo-bright.png","utility/chart-helpers.js","utility/api.js","components/Homepage/Homepage.jsx","App.js","reportWebVitals.js","index.js"],"names":["stockCurrencies","EUR","NOK","USD","stockColors","API_URL","getStocks","symbols","currency","stocksInfo","fetch","join","then","data","json","fetchedSelectedStocks","selectedStocks","stockSeries","forEach","oneDay","newStockRecord","Date","recorded","getTime","open","high","low","close","foundStock","find","stock","_id","stock_id","push","stockName","searchedStock","id","name","color","turboThreshold","_show","createSeriesFromData","Homepage","chartComponent","useRef","useState","setSelectedStocks","setStocksInfo","zoom","setZoom","selectedCurrency","setSelectedCurrency","handleZoom","series","chart","type","backgroundColor","style","tooltip","split","xAxis","labels","title","yAxis","lineColor","scrollbar","enabled","navigator","credits","rangeSelector","inputEnabled","allButtonsEnabled","labelStyle","buttons","count","text","dataGrouping","units","events","click","buttonTheme","width","selected","createHighchartsConfig","highchartsConfig","setHighchartsConfig","loadStocks","useCallback","pickedStocks","pickedCurrency","current","showLoading","config","catch","err","console","log","finally","hideLoading","highlightStock","newState","length","restOfStocks","filter","points","point","setState","useEffect","fetchedStocksData","sort","a","b","className","src","Logo","alt","highcharts","Highcharts","constructorType","options","ref","Object","values","map","curr","onClick","symbol","includes","stockSymbol","oldSelectedStocks","position","indexOf","newSelectedStocks","splice","onMouseEnter","onMouseLeave","cagr","sharpe","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aa5ca2d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo-bright.1ab74d6b.png\";","const stockCurrencies = {\n  EUR: 'EUR',\n  NOK: 'NOK',\n  USD: 'USD'\n};\n\nconst stockColors = [\n  'red',\n  'yellow',\n  'green',\n  'royalblue',\n  'aqua',\n  'hotpink',\n  'darkblue',\n];\n\nconst createSeriesFromData = (selectedStocks, stocksInfo) => {\n  const stockSeries = [];\n  selectedStocks.forEach(oneDay => {\n    const newStockRecord = [\n      (new Date(oneDay.recorded)).getTime(),\n      oneDay.open,\n      oneDay.high,\n      oneDay.low,\n      oneDay.close,\n    ];\n\n    const foundStock = stockSeries.find(stock => stock._id === oneDay.stock_id)\n    if (foundStock) {\n      foundStock.data.push(newStockRecord)\n    } else {\n      const stockName = stocksInfo.find(searchedStock => searchedStock.id === oneDay.stock_id);\n\n      stockSeries.push({\n        data: [newStockRecord],\n        name: stockName.name,\n        color: stockColors[oneDay.stock_id - 1],\n        turboThreshold: 20000,\n        _id: oneDay.stock_id,\n        _show: true\n      });\n    }\n  })\n\n  return stockSeries\n}\n\nconst createHighchartsConfig = (handleZoom = () => {}) => ({\n    series: [],\n    chart: {\n      type: 'ohlc',\n      backgroundColor: 'transparent',\n      style: {\n        color: '#FFF',\n      },\n    },\n    tooltip: {\n      split: false\n    },\n    xAxis: {\n      labels: {\n        style: {\n          color: '#FFF',\n        },\n      },\n      title: {\n        style: {\n          color: '#FFF',\n        },\n      },\n    },\n    yAxis: {\n      lineColor: '#DDD',\n      labels: {\n        style: {\n          color: '#FFF',\n        },\n      },\n      title: {\n        style: {\n          color: '#FFF',\n        },\n      },\n    },\n    scrollbar: {\n      enabled: false,\n    },\n    navigator: {\n      enabled: false,\n    },\n    credits: {\n      enabled: false,\n    },\n    rangeSelector: {\n      inputEnabled: false,\n      allButtonsEnabled: true,\n      labelStyle: {\n        color: 'white',\n      },\n      buttons: [\n        {\n          type: 'year',\n          count: 1,\n          text: '1Y',\n          dataGrouping: {\n            units: [['day', [1]]],\n          },\n          events: {\n            click: () => handleZoom('1y')\n          }\n        },\n        {\n          type: 'year',\n          count: 5,\n          text: '5Y',\n          dataGrouping: {\n            units: [['day', [1]]],\n          },\n          events: {\n            click: () => handleZoom('5y')\n          }\n        },\n        {\n          type: 'all',\n          text: 'MAX',\n          dataGrouping: {\n            units: [['day', [1]]],\n          },\n          events: {\n            click: () => handleZoom('max')\n          }\n        },\n      ],\n      buttonTheme: {\n        width: 40,\n      },\n      selected: 0,\n    },\n  });\n\n\nexport {\n  createHighchartsConfig,\n  stockColors,\n  stockCurrencies,\n  createSeriesFromData,\n}","import { createSeriesFromData } from \"./chart-helpers\";\n\nconst API_URL = \"https://apps.lukaszpiotrkowski.pl/stockapp/\";\n\nconst getStocksData = () => fetch(`${API_URL}/stocks?period=1,5,max`).then(data => data.json());\n\nconst getStocks =\n  (symbols, currency, stocksInfo) =>\n    fetch(`${API_URL}/time_series?stocks=${symbols.join()}&currency=${currency}`)\n      .then(data => data.json())\n      .then((fetchedSelectedStocks) => {\n        return createSeriesFromData(fetchedSelectedStocks, stocksInfo);\n      });\n\nexport {\n  getStocksData,\n  getStocks,\n}","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport Highcharts from 'highcharts/highstock';\nimport HighchartsReact from 'highcharts-react-official';\n\nimport Logo from '../../images/logo-bright.png';\nimport { getStocksData, getStocks } from '../../utility/api';\nimport { createHighchartsConfig, stockColors, stockCurrencies } from '../../utility/chart-helpers';\n\nimport './Homepage.css';\n\nconst Homepage = () => {\n  const chartComponent = useRef(null);\n  const [selectedStocks, setSelectedStocks] = useState([]);\n  const [stocksInfo, setStocksInfo] = useState();\n  const [zoom, setZoom] = useState('1y');\n  const [selectedCurrency, setSelectedCurrency] = useState(stockCurrencies.USD);\n  const [highchartsConfig, setHighchartsConfig] = useState(createHighchartsConfig(setZoom));\n\n  const loadStocks = useCallback((pickedStocks, pickedCurrency) => {\n    if (!stocksInfo) return;\n    chartComponent.current.chart.showLoading();\n\n    // const stocksToFetch = pickedStocks.filter(())\n    getStocks(pickedStocks, pickedCurrency, stocksInfo)\n      .then((stockSeries) => {\n        setHighchartsConfig(config => ({ series: stockSeries }));\n      })\n      .catch(err => console.log(err))\n      .finally(() => \n        chartComponent.current.chart.hideLoading()\n      );\n  }, [stocksInfo]);\n  \n  const changeCurrency = (currency) => {\n    setSelectedCurrency(currency);\n    loadStocks(selectedStocks, currency);\n  }\n  \n  const toggleStock = (stockSymbol) => {\n    setSelectedStocks((oldSelectedStocks) => {\n      const position = oldSelectedStocks.indexOf(stockSymbol);\n      const newSelectedStocks = [...oldSelectedStocks];\n      \n      if (position !== -1) {\n        newSelectedStocks.splice(position, 1);\n      } else {\n        newSelectedStocks.push(stockSymbol);\n      }\n      \n      loadStocks(newSelectedStocks, selectedCurrency)\n      return newSelectedStocks;\n    });\n  };\n  \n  const highlightStock = (stockName, newState) => {\n    if (selectedStocks.length === 0) return;\n    const foundStock = chartComponent.current.chart.series.find(series => series.name === stockName);\n    const restOfStocks = chartComponent.current.chart.series.filter(series => series.name !== stockName)\n    \n    if(!foundStock) return;\n    foundStock.points.forEach(point => {\n      point.setState(newState)\n    });\n    if (newState === 'hover') {\n      restOfStocks.forEach(stock => stock.points.forEach(point => point.setState('inactive')))\n    } else {\n      restOfStocks.forEach(stock => stock.points.forEach(point => point.setState('normal')));\n    }\n  }\n  \n    useEffect(() => {\n      getStocksData()\n        .then((fetchedStocksData) => {\n          fetchedStocksData.sort((a, b) => a.id > b.id)\n          setStocksInfo(fetchedStocksData)\n        })\n        .catch(err => console.log(err));\n    }, []);\n  \n  return (\n    <div className=\"introProject\">\n      <header>\n        <img src={Logo} alt=\"Quantfol.io logo\" />\n      </header>\n      <main>\n        <section className=\"chart\">\n          <HighchartsReact\n            highcharts={Highcharts}\n            constructorType={'stockChart'}\n            options={highchartsConfig}\n            ref={chartComponent}\n          />\n          <div className=\"currency\">\n            {Object.values(stockCurrencies).map(curr => (\n              <div \n                key={curr}\n                className={`currency-button${selectedCurrency === curr ? ' currency-button--selected': ''}`}\n                onClick={() => changeCurrency(curr)}\n              >{curr}</div>\n            ))}\n          </div>\n        </section>\n        <section className=\"legend\">\n        {stocksInfo ? stocksInfo.map(({ name, id, symbol }) => (\n            <div\n              key={`stockLegend-${id}`}\n              className={`legend-stock${\n                !selectedStocks.includes(symbol) ? ' legend-stock--hidden' : ''\n              }`}\n              onClick={() => toggleStock(symbol)}\n              onMouseEnter={() => highlightStock(name, 'hover')}\n              onMouseLeave={() => highlightStock(name, 'normal')}\n            >\n              <div\n                className=\"stock-circle\"\n                style={{ backgroundColor: stockColors[id - 1] }}\n              ></div>\n              <div className=\"legend-text\">{name}</div>\n            </div>\n          )) : <div className=\"loading\"><h3>Loading...</h3></div>}\n        </section>\n        <section className=\"stocks\">\n          <table>\n            <thead>\n              <tr>\n                <td></td>\n                <td>Stock</td>\n                <td>CAGR</td>\n                <td>Sharpe</td>\n              </tr>\n            </thead>\n            <tbody>\n              {stocksInfo ? stocksInfo.map((stock) => (\n                <tr key={`stockTable-${stock.id}`}>\n                  <td>\n                    <div\n                      className=\"stock-circle\"\n                      style={{ backgroundColor: stockColors[stock.id - 1] }}\n                    ></div>\n                  </td>\n                  <td>{stock.name}</td>\n                  <td>{`${stock[zoom].cagr}%`}</td>\n                  <td>{stock[zoom].sharpe}</td>\n                </tr>\n              )) : null}\n            </tbody>\n          </table>\n          {!stocksInfo ? <div className=\"loading\"><h3>Loading...</h3></div> : ''}\n        </section>\n      </main>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React from 'react';\n\nimport Homepage from './components/Homepage/Homepage';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div id=\"App\">\n      <Homepage />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}